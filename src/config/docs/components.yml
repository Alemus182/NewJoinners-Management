components:
  schemas:
    Joiner:
      type: object
      properties:
        id:
          type: string
        identification_number:
          type: string
          description: must be unique
        name:
          type: string
        last_name:
          type: string
        role:
          type: string
          enum: [SC,EN,SE,ST] 
        stack:
          type: string
          enum: [net,java,python,node]
        english_level:
          type: string
          enum: [A1,A2,B1,B2,C1,C2]  
        domain_experience:
          type: string
          enum: [Low,Medium,Advanced]  
      example:
        identification_number: '2312321'
        name: fake name
        last_name: fake@example.com
        role: EN
        stack: net
        english_level: B1
        domain_experience: Advanced

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateIdentification:
      description: Identification already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Identification already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
